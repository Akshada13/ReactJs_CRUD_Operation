{"version":3,"sources":["PostApp.js","index.js"],"names":["API_URL","PostApp","props","createPost","a","state","userId","title","body","axios","post","data","posts","push","setState","console","log","getPosts","get","updatePost","id","put","index","findIndex","p","deletePost","postId","delete","filter","handleSubmit","e","preventDefault","handleChange","target","name","value","componentDidMount","onSubmit","this","type","onChange","required","map","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1eebaf89.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL =  \"https://jsonplaceholder.typicode.com/posts\"\r\n\r\nclass PostApp extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          posts: [],\r\n          id: \"\",\r\n          userId: \"\",\r\n          body: \"\",\r\n          title: \"\",\r\n      };\r\n\r\n    }\r\n    \r\n    //  CREATE OPERATION\r\n     createPost = async () => {\r\n         try{\r\n             const {userId, title, body } = this.state;\r\n            const {data: post} = await axios.post(API_URL, {\r\n                userId,\r\n                title,\r\n                body,\r\n            });\r\n            const  posts = [...this.state.posts];\r\n            posts.push(post);\r\n           this.setState({posts,  userId: \"\", title: \"\", body: \"\"});\r\n          } catch (err) {\r\n              console.log(\"Error creating data from server\", err);\r\n          }\r\n          \r\n      \r\n     };\r\n    \r\n    // READ OPERATION\r\n      getPosts = async () => {\r\n          try{\r\n            const {data: posts} = await axios.get(API_URL);\r\n            this.setState({posts})\r\n          } catch (err) {\r\n              console.log(\"Error fetching data from server\", err);\r\n          }\r\n          \r\n      };\r\n\r\n    //UPDATE OPERATION \r\n     updatePost = async () => {\r\n        try{\r\n            const {id, userId, title, body } = this.state;\r\n           const {data: post} = await axios.put(`${API_URL}/${id}`, {\r\n               userId,\r\n               title,\r\n               body,\r\n           });\r\n           const  posts = [...this.state.posts];\r\n           const index  = posts.findIndex((p) => p.id === id);\r\n           posts[index] = post;\r\n           this.setState({posts, id: \"\", userId: \"\", title: \"\", body: \"\"});\r\n\r\n         } catch (err) {\r\n             console.log(\"Error updating  data from server\", err);\r\n         }\r\n     };\r\n\r\n    //DELETE OPERATION\r\n      deletePost = async (postId) => {\r\n        try{\r\n             await axios.delete(`${API_URL}/${postId}`);\r\n                let posts = [...this.state.posts];//this for  taking the copy of all list \r\n                posts = posts.filter((post) =>post.id !== postId);// this for except deleting element ,all element  will be there\r\n                this.setState({posts});\r\n                //console.log(`${postId} Deleted !`);\r\n          } catch (err) {\r\n              console.log(\"Error deleting  data from server\", err);\r\n          }\r\n          \r\n      };\r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(this.state.id) this.updatePost();\r\n        else this.createPost();\r\n    };\r\n\r\n      handleChange = ({ target: {name, value} }) => {\r\n        this.setState({ [name]: value});\r\n\r\n      };\r\n\r\n      \r\n\r\n      componentDidMount = () => this.getPosts();\r\n      \r\n\r\n    render(){\r\n        return (\r\n         <>\r\n         <h3>Post App</h3>\r\n         <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <label>User Id : </label>\r\n          <input\r\n          name=\"userId\" \r\n          type=\"text\" \r\n          value={this.state.userId}\r\n          onChange={this.handleChange}\r\n          required\r\n         />\r\n         </div>\r\n        <br />\r\n        <div>\r\n          <label>Title : </label>\r\n          <input\r\n          name=\"title\" \r\n          type=\"text\" value={this.state.title}  \r\n          onChange={this.handleChange}\r\n          required\r\n           />\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label>Body : </label>\r\n          <input\r\n          name=\"body\" \r\n          type=\"text\" value={this.state.body}  \r\n          onChange={this.handleChange}\r\n          required\r\n           />\r\n        </div>\r\n        <br />\r\n        <div> \r\n            <button type=\"submit\">Submit</button>\r\n        </div>\r\n        </form>\r\n          <table>\r\n             <tr>\r\n              <th>User Id</th>\r\n              <th>Post Id</th>\r\n              <th>Title</th>\r\n              <th>Body</th>\r\n              <th>Action</th>\r\n            </tr>\r\n            {this.state.posts.map((post) => {\r\n                return(\r\n                    <tr>\r\n                        <td>{post.userId}</td>\r\n                        <td>{post.id}</td>\r\n                        <td>{post.title}</td>\r\n                        <td>{post.body}</td>\r\n                        <td>\r\n                            <button onClick={() => this.setState({...post})}>\r\n                                Update\r\n                            </button>                       \r\n                       </td>\r\n                        <td>\r\n                            <button onClick={() => this.deletePost(post.id)}>\r\n                                Delete\r\n                            </button>                       \r\n                       </td>\r\n                    </tr>\r\n                );\r\n            })}\r\n            </table>\r\n        </>\r\n        );\r\n        \r\n    }\r\n}\r\nexport default PostApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PostApp from \"./PostApp\";\n\nReactDOM.render(\n  <PostApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}